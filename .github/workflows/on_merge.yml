name: Merge

on:
    push:
      branches:
        - main

jobs:
  
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust and clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') || hashFiles('**/Cargo.toml') }}

      - run: cargo clippy -- -D warnings

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust and rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - run: cargo fmt --all -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') || hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') || hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') || hashFiles('**/Cargo.toml') }}

      - run: cargo test

  build:
    name: Build validation
    needs: [fmt, clippy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true

      - name: Install Cross
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross --force

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') || hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') || hashFiles('**/Cargo.toml') }}

      - run: cross build --release --target aarch64-unknown-linux-gnu --all-features
 
  tag-and-release:
    name: Tag and Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      
      - name: Read version
        uses: SebRollen/toml-action@v1.2.0
        id: read_toml
        with:
          file: 'Cargo.toml'
          field: 'package.version'
      - run: echo 'Version = ${{ steps.read_toml.outputs.value }}'
      
      - name: Check tag
        uses: mukunku/tag-exists-action@v1.6.0
        id: check_tag
        with: 
          tag: 'v${{ steps.read_toml.outputs.value }}'
      - run: echo 'Tag exists = ${{ steps.check_tag.outputs.exists }}'

      - name: Release
        if: ${{ steps.check_tag.outputs.exists == 'false'}}
        uses: ncipollo/release-action@v1
        with:
          commit: ${{ github.sha }}
          name: "release - v${{ steps.read_toml.outputs.value }}"
          tag: "v${{ steps.read_toml.outputs.value }}"
          allowUpdates: true
          draft: true
          generateReleaseNotes: true
      
